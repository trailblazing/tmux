%if "#{&&:#{escape_key},#{assist_key}}"

%else
	%if '[ -s "$DOT_CONFIG/terminal/tmux/header.conf" ]'
    	source "$DOT_CONFIG/terminal/tmux/header.conf"
	%endif
%endif


    %hidden   resize_left='M-h'
    %hidden   resize_down='M-j'
    %hidden     resize_up='M-k'
    %hidden  resize_right='M-l'
    %hidden resize_step_x=5
    %hidden resize_step_y=2

#   Smart pane resizing with awareness of Vim splits.
#   See: https://github.com/RyanMillerC/better-vim-tmux-resizer
#   is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
#       | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

#   Edit values if you use custom resize_count variables
    bind-key -n $resize_up    if-shell -F "#{@is-vim}" "send-keys $resize_up"    "resize-pane -U $resize_step_y"
    bind-key -n $resize_down  if-shell -F "#{@is-vim}" "send-keys $resize_down"  "resize-pane -D $resize_step_y"
    bind-key -n $resize_left  if-shell -F "#{@is-vim}" "send-keys $resize_left"  "resize-pane -L $resize_step_x"
    bind-key -n $resize_right if-shell -F "#{@is-vim}" "send-keys $resize_right" "resize-pane -R $resize_step_x"

    bind-key -T copy-mode-vi $resize_up    resize-pane -U $resize_step_y
    bind-key -T copy-mode-vi $resize_down  resize-pane -D $resize_step_y
    bind-key -T copy-mode-vi $resize_left  resize-pane -L $resize_step_x
    bind-key -T copy-mode-vi $resize_right resize-pane -R $resize_step_x


