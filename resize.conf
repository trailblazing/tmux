#   if '[ -s "$XDG_CONFIG_HOME/tmux/header.conf" ]' \
#   {
#   %if "#{||:#{&&:#{escape_key},#{assist_key}},#{&&:#{!=:#{one_stage_policy},1},#{||:#{escape_key},#{assist_key}}}"
#   %if "#{&&:#{escape_key},#{assist_key}}"

#   %else
#   %if "#{#{==:#{one_stage_policy},1}?#{||:#{==:#{escape_key},},#{==:#{assist_key},}},#{&&:#{==:#{escape_key},},#{==:#{assist_key},}}}"
#   %if "#{should_include}"
	%if "#{&&:#{should_include},#{!=:#{header_loaded},1}}"
    	source "$XDG_CONFIG_HOME/tmux/header.conf"
	%endif
#   } {
#   	confirm-before -p "[0012] $XDG_CONFIG_HOME/tmux/header.conf is not a valid file. Kill server ? (y/n)" kill-server
#   }


    %hidden   resize_left='M-h'
    %hidden   resize_down='M-j'
    %hidden     resize_up='M-k'
    %hidden  resize_right='M-l'
    %hidden resize_step_x=5
    %hidden resize_step_y=2

#   Smart pane resizing with awareness of Vim splits.
#   See: https://github.com/RyanMillerC/better-vim-tmux-resizer
#   is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
#       | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

#   Edit values if you use custom resize_count variables
    bind-key -n $resize_up    "if-shell -F '#{@is-vim}' { send-keys $resize_up \n }    { resize-pane -U $resize_step_y \n }"
    bind-key -n $resize_down  "if-shell -F '#{@is-vim}' { send-keys $resize_down \n }  { resize-pane -D $resize_step_y \n }"
    bind-key -n $resize_left  "if-shell -F '#{@is-vim}' { send-keys $resize_left \n }  { resize-pane -L $resize_step_x \n }"
    bind-key -n $resize_right "if-shell -F '#{@is-vim}' { send-keys $resize_right \n } { resize-pane -R $resize_step_x \n }"

    bind-key -T copy-mode-vi $resize_up    resize-pane -U $resize_step_y
    bind-key -T copy-mode-vi $resize_down  resize-pane -D $resize_step_y
    bind-key -T copy-mode-vi $resize_left  resize-pane -L $resize_step_x
    bind-key -T copy-mode-vi $resize_right resize-pane -R $resize_step_x


